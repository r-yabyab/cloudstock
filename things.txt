implement button to cycle through symbol, maybe even rand

Names
    stockpop
    equity sky
    stock storm

ChatGPT Names
    stock-flex $10
    stockmorph.net $10 (.com taken by sus chinese site)
    stockshapes.net
    Tradeshape
    stocksquares

Libraries
- 1/31/23 23:43
    npm install react-draggable


sandbox ////////////////////

useEffect (() => {
    
}, [reducerValue])

const [url, setUrl] = [
    {id:1,
    link: 'fetch ("iex.cloud/AAPL")'},
    {id:2,
    link: 'fetch("iex.cloud/AMZN")'},
]

    const addSymbol = () => {
        let num = Url.length + 1
        let newEntry = {id: num, symbol: symbolName}
        setList([...list, newEntry])
    }


Promise.all([
    (...fetch)
]).then(allResponses => {
    
})


///////////////
///////////////
///////////////
///////////////
///////////////



curl --header 'Accept: text/event-stream' 'https://cloud-sse.iexapis.com/v1/stocksUS5Second?token=YOUR_TOKEN&symbols=spy'
https://ryabyab.iex.cloud/v1/data/core/quote/${symbolName}?token=sk_4b6ebe9d84b44fe48cbf602d2c70884e
https://ryabyab.iex.cloud/v1/data/core/quote/${symbolName}?token=sk_4b6ebe9d84b44fe48cbf602d2c70884e&symbols=spy

'https://cloud-sse.iexapis.com/v1/stocksUS5Second?token=sk_4b6ebe9d84b44fe48cbf602d2c70884e&symbols=spy'

https://cloud-sse.iexapis.com/v1/stocksUS?symbols=spy,msft&token=sk_4b6ebe9d84b44fe48cbf602d2c70884e'


NO UPT (doesn't required paid plan)
https://cloud-sse.iexapis.com/stable/stocksUSNoUTP\?symbols\=spy\&token\=sk_4b6ebe9d84b44fe48cbf602d2c70884e

  Works, but needs paid account
  https://cloud-sse.iexapis.com/stable/stocksUSNoUTP?token=sk_4b6ebe9d84b44fe48cbf602d2c70884e&symbols=spy

Futures
/ref-data/futures/symbols/ng

works
https://ryabyab.iex.cloud/v1/ref-data/futures/symbols/?token=sk_4b6ebe9d84b44fe48cbf602d2c70884e

Works, futures symbol list
https://ryabyab.iex.cloud/v1/ref-data/futures/symbols/ng?token=sk_4b6ebe9d84b44fe48cbf602d2c70884e

    Fetches all symbols from futures
    https://ryabyab.iex.cloud/v1/ref-data/futures/symbols/?token=sk_4b6ebe9d84b44fe48cbf602d2c70884e


==    {
        "underlying": "MNQ",
        "exchange": "CME",
        "exchangeName": "CHICAGO MERCANTILE EXCHANGE"
    },
        {
        "underlying": "NQ",
        "exchange": "CME",
        "exchangeName": "CHICAGO MERCANTILE EXCHANGE"
    },
        {
        "underlying": "MES",
        "exchange": "CME",
        "exchangeName": "CHICAGO MERCANTILE EXCHANGE"
    },



needs paid subscription to work
https://ryabyab.iex.cloud/v1/ref-data/futures/symbols/nq?token=sk_4b6ebe9d84b44fe48cbf602d2c70884e


+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
OUTDATED

DataFetch.js 
   
//
//testing
//testing
//testing
//testing
//
//vvvvvvvvvvvvvvvvvvvvvvv
//
//
// //
//     const [newFetch, setNewFetch] = useState('')
//     const [fetchLink, setFetchLink] = useState (
//         {
//             id:1,
//             symbol:'AAPL',
//             link: 'fetch(`https://ryabyab.iex.cloud/v1/data/core/quote/AAPL?token=sk_4b6ebe9d84b44fe48cbf602d2c70884e`)',
//         },
//         {
//             id:2,
//             symbol:'AMZN',
//             link: 'fetch(`https://ryabyab.iex.cloud/v1/data/core/quote/AMZN?token=sk_4b6ebe9d84b44fe48cbf602d2c70884e`)',
//         }
//     )


    // useEffect (() => {
    //     console.log('todo')
    // }, [])


    // const addLink = () => {
    // if (newFetch) {
    //     let num = fetchLink.length + 1
    //     let newEntry = {id: num, symbol:{symbolName}, link: 'fetch(`https://ryabyab.iex.cloud/v1/data/core/quote/${symbolName}?token=sk_4b6ebe9d84b44fe48cbf602d2c70884e`)'}
    //     setFetchLink(...fetchLink, newEntry)
    //     setNewFetch('')
    // }
    // }

    // const fetchArrList = fetchLink && fetchLink.map((x, index) => {
    //     return (
    //         <div key={x.id}>
    //         {x.open}
    //         </div>
    //     )
    // })

    // // // group method
    // const urls = [
    //     'https://ryabyab.iex.cloud/v1/data/core/quote/AMZN?token=sk_4b6ebe9d84b44fe48cbf602d2c70884e',
    //     'https://ryabyab.iex.cloud/v1/data/core/quote/AAPL?token=sk_4b6ebe9d84b44fe48cbf602d2c70884e',
    //     'https://ryabyab.iex.cloud/v1/data/core/quote/PCG?token=sk_4b6ebe9d84b44fe48cbf602d2c70884e',
    // ]

    // Promise.all(urls.map(x => 
    //     fetch(x)
    //         .then(JSON.parse)
    //         .catch(error => console.log('there was a problem', error))
    //     ))
    //         .then(x => {
    //             console.log(x.open)
    //         })



    // Promise.all([
    //     fetch("https://ryabyab.iex.cloud/v1/data/core/quote/AMZN?token=sk_4b6ebe9d84b44fe48cbf602d2c70884e"),
    //     fetch("https://ryabyab.iex.cloud/v1/data/core/quote/AAPL?token=sk_4b6ebe9d84b44fe48cbf602d2c70884e"),
    //     fetch("https://ryabyab.iex.cloud/v1/data/core/quote/PCG?token=sk_4b6ebe9d84b44fe48cbf602d2c70884e")
    //   ]).then(allResponses => {
    //     console.log(allResponses)  
    //   })






//
//
//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//
//
//testing
//testing
//testing
//testing
//testing
//testing
//
//
//
//


+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++

    // const client = new Client({api_token: "TOKEN", version: "VERSION"});
    // client.quote({symbol: "AAPL"}).then((res) => {
    //     console.log(res)
    // })


//     // fetch from db, static numbers
//   useEffect (() => {
//     const fetchStock = async () => {
//         const response = await fetch('https://ryabyab.iex.cloud/v1/data/ryabyab/DATASET_2BRSXSLCA?last=1&token=sk_4b6ebe9d84b44fe48cbf602d2c70884e')
//         const json = await response.json()

//         if (response.ok) {
//             setDbStock(json)
//         }
//     }
//     fetchStock()
//   }, [])

+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++


For /StatsRow.js

    // const styles = {
    //     draggable: {
    //       position: 'absolute',
    //       zIndex: 10,
    //     },
    //     selected: {
    //       position: 'absolute',
    //       zIndex: 20,
    //     },
    //   };

    //   const style = selected ? styles.selected : styles.draggable


+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++

For /StatsRow.js
    - 


import React, { useState, useRef, useEffect} from "react";
// import Draggable from 'react-draggable'

function StatsRow (props) {

    const [pressed, setPressed] = useState(false)
    const [position, setPosition] = useState({x: 0, y: 0})
    const ref = useRef()
    
    useEffect(() => {
    if (ref.current) {
        ref.current.style.transform= `translate(${position.x}px, ${position.y}.px)`
    }
    }, [position])
    
    const onMouseMove = (e) => {
    if (pressed) {
        setPosition({
            x: position.x + e.movementX,
            y: position.y + e.movementY
        })
    }
    }



    const ExitClick = () => {
        console.log('clicked on ExitClick via refExit useRef()')
    }

    return (
        <>
            <div 
                                        onMouseMove={onMouseMove}
                                        onMouseDown={() => setPressed(true)}
                                        onMouseUp={() => setPressed(false)}
                                        ref={ref} 
                                          
            className=" text-white select-none
            [&>div]:shadow-xl [&>div]:m-4 [&>div]:min-w-[300px] [&>div]:min-h-[30px] [&>div]:resize [&>div]:overflow-hidden
            ">
                
                <div
                className={props.change > 0 ? "relative bg-green-400 m-auto flex [&>div]:border-x-[1px] [&>div]:text-center [&>div]:border-slate-300" : "bg-red-400 m-auto flex [&>div]:border-x-[1px] [&>div]:text-center [&>div]:border-slate-300"} draggable="false">
                    <div className="bg-slate-700 text-white p-4 min-w-[120px]">
                        <div className="font-semibold text-2xl tracking-wider">{props.symbol}</div>
                        {/* <div className="max-w-[120px]">{props.companyName}</div> */}
                    </div>
                    <div className="bg-slate-700 w-[100px] p-4">{props.latestPrice}</div>
                    <div>{"change " + props.change}</div>
                    <div>{"open " + props.open}</div>
                    <div onClick={ExitClick} className=" border-none hover:cursor-pointer absolute right-0 top-0 text-2xl"> X </div>
                    {/* <div>{"close " + props.iexClose}</div> */}
                </div>
            </div>

        </>
    )
}

export default StatsRow;



+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++

/////  WORKS 
/////  WORKS 
/////  WORKS 
/////  WORKS 
/////  WORKS 
/////  WORKS 
/////  WORKS

for /StatsRow.js

import React, { useState, useRef } from 'react';

const StockApp = () => {
  const [quotes, setQuotes] = useState([
    { name: 'AAPL', top: 0, left: 0, zIndex: 5 },
    { name: 'GOOG', top: 50, left: 50, zIndex: 4 },
    { name: 'TSLA', top: 100, left: 100, zIndex: 3 },
    { name: 'MSFT', top: 150, left: 150, zIndex: 2 },
    { name: 'FB', top: 200, left: 200, zIndex: 1 },
  ]);
  const [isDragging, setDragging] = useState(false);
  const [selectedQuote, setSelectedQuote] = useState(null);

  const handleMouseDown = (index) => {
    setDragging(true);
    setSelectedQuote(index);
    quotes[index].zIndex = 6;
    setQuotes([...quotes]);
  };

  const handleMouseUp = () => {
    setDragging(false);
    quotes[selectedQuote].zIndex = 5;
    setQuotes([...quotes]);
  };

  const handleMouseMove = (event) => {
    if (!isDragging) return;
    quotes[selectedQuote].top = event.clientY;
    quotes[selectedQuote].left = event.clientX;
    setQuotes([...quotes]);
  };

  return (
    <div
      onMouseMove={handleMouseMove}
      onMouseUp={handleMouseUp}
      style={{ height: '100vh', width: '100vw' }}
    >
      {quotes.map((quote, index) => (
        <div
          key={quote.name}
          onMouseDown={() => handleMouseDown(index)}
          style={{
            position: 'absolute',
            top: quote.top,
            left: quote.left,
            zIndex: quote.zIndex,
            backgroundColor: 'white',
            padding: 20,
            border: '1px solid black',
          }}
        >
          {quote.name}
        </div>
      ))}
    </div>
  );
};

export default StockApp;


/////  WORKS 
/////  WORKS 
/////  WORKS 
/////  WORKS 
/////  WORKS 
/////  WORKS

+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++

/////  WORKS 
/////  WORKS 
/////  WORKS 
/////  WORKS

For return () of Stat.js
                {stockData.map((stock) => (
                    <div key={stock.symbol}>
                        <StatsRow
                        symbol={stock.symbol}
                        open={stock[0].iexOpen}
                        volume={stock[0].volume}
                        price={stock[0].price}
                        change={stock[0].change}
                        iexClose={stock[0].iexClose}
                        latestPrice={stock[0].latestPrice}
                        companyName={stock[0].companyName}
                    />
                    
                    {/* {"close " + stock[0].iexClose} */}
                    </div>
                ))}


/////  WORKS 
/////  WORKS 
/////  WORKS 
/////  WORKS

+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++

//StatsRow.js
//  Works, draggable and u can resize

import React, { useEffect, useState } from "react";
import Draggable from 'react-draggable'

function StatsRow (props, {reducerValue, forceUpdate, yourStocks}) {

    const [position, setPosition] = useState({x:0, y:0})

    const handleStop = () => {
        console.log('handlestop')
    }

    const ExitClick = () => {
        console.log('clicked on ExitClick via refExit useRef()')
    }

    return (
        <>
            <div 
                                        // onMouseMove={onMouseMove}
                                        // onMouseDown={() => setPressed(true)}
                                        // onMouseUp={() => setPressed(false)}
                                        // ref={ref} 
                                        // [&>div]:absolute
                className=" text-white select-none  
            [&>div]:resize [&>div]:overflow-hidden [&>div]:absolute
            [&>div]:shadow-xl [&>div]:m-4 [&>div]:min-w-[180px] [&>div]:min-h-[30px] [&>div]:w-[380px]
            ">
                <Draggable 
                handle=".handle"
                // defaultPosition={
                //     positions ===null ?
                //     {x:0, y:0}
                //     : !positions[props.id] ?
                //     {x:0, y:0} :
                //     {x: positions[props.id].x, y: positions[props.id].y}
                // }
                // onStop={handleStop}
                onStop={handleStop}
                >
                    <div
                        className={props.change > 0 ? "relative bg-green-400 m-auto flex [&>div]:border-x-[1px] [&>div]:text-center [&>div]:border-gray-700" : "bg-red-400 m-auto flex [&>div]:border-x-[1px] [&>div]:text-center [&>div]:border-gray-700"} draggable="false">
                        <div className="bg-zinc-700  text-white p-4 min-w-[120px]">
                            <div className="font-semibold absolute text-2xl tracking-wider top-[50%] -translate-y-1/2 left-[40px]">{props.symbol}</div>
                            {/* <div className="max-w-[120px]">{props.companyName}</div> */}
                        </div>
                        <div className="bg-zinc-700 ratingAnimationYellow w-[100px] p-4">${props.latestPrice}</div>
                        <div>{"O " + props.open}</div>
                        <div>{"C " + props.change}</div>
                        <div onClick={ExitClick} className=" border-none text-slate-500 hover:text-white hover:cursor-pointer absolute right-0 top-0 -mt-3 text-2xl"> x </div>
                        {/* <div className="border-none hover:cursor-pointer absolute right-0 bottom-0 text-2xl bg-green-200">/</div> */}
                        <div className="absolute h-full opacity-0 w-[94%] handle hover:cursor-move bg-black top-0 "> click to drag</div>
                        {/* <div>{"close " + props.iexClose}</div> */}
                    </div>
                </Draggable>
            </div>

        </>
    )
}

export default StatsRow;


+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++
+++++++++++++++++++++++++++